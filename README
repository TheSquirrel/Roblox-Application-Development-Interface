Roblox Application Development Interface

Team Members:
+ NightName
+ TheSquirrel
+ LPGhatguy

Introduction
Each department will have a sub-directory here. At present we have two departments, Framework Development and App Development. The basic framework is being worked out by NightName and TheSquirrel at present, once this is complete official developers can start creating applications to be included in the main release. The idea is that if application developers want any new methods or properties to the framework to make developing easier, it can be quickly added to the project by the framework devs.


TODO:

Framework Questions:
+ Protecting source?
+ - TheSquirrel: I think the framework should be open source and so should most official applications but it is not a requirement. For those who do not want their source released, we can GZip it, minify it and then compile it to get something pretty unreadable.
+ How are applications loaded by the user?
+ Do developers send in models?
+ What actions do we have against viruses?
+ - Nightname: I don't think we will have any problems with viruses, as long as we have truster developers.
+ Networking? Shared folders? Server folder for sharing documents?
+ File system?
+ - LPGhatguy: I say we create one out of tables of sorts. From there, we can have file attributes, and save files in an XML-style form, if we can't save tables, come DP.
+ 3rd party applications? How will these be included into the system? iOS App Store perhaps? Search, top lists etc?
+ - LPGhatguy: Well, we could have a list of 'trusted developers' whom all have licenses we could revoke. From there, we would have an app-store type application.
+ How are applications going to be kept separate from the rest of the system?
+ - LPGhatguy: Local environments for 'RAM data', of course, with an access to 'global data', so, in a sense, we won't.
+ Should 3rd party applications be kept separate from accessing the file tree?
+ - LPGhatguy: They don't have to be, as long as they are trusted applications. We'll have to generate an access key or something like that.
+ How do applications share data? How do we keep shared data organised and protected?
+ - LPGhatguy: Through a global data-type thing. It would simply be a table, and keeping the data shared and protected would be up to the application. Though for the filesystem, having a directory only that application could access would be nice, except for 1st party applications.


LPGhatguy:
Instead of basing the framework on graphics and such, why don't we create the underlying application framework first? I did the same sort of thing with Rash, and it worked great, had the code not been so messy and such. When we do create graphics, mesh them in with the underlying framework.


Framework:
+ Basic {
+ + Positioning.
+ + Resizing.
+ + Events.
+ }
+ Applications {
+ + Isolating applications in case of crashes do they do not affect other applications or the navigation.
+ + Loading applications from some sort of global repository.
+ }
+ Navigation {
+ + Dock for minimized applications.
+ + Close, Minimize, Resize buttons. 
+ + Dragging windows.
+ }

Applications:
+ Notepad.
+ Rich Text Format Editor.
+ Web Browser.
+ Chat clients.
+ Email.
+ Generic syntax highlighter (Think Notepad ++)
+ Lua IDE
+ Calculator.
+ 2D Games {
+ + Fall Down.
+ + Minesweeper.
+ + Space Invaders.
+ + More arcade games.
+ }
